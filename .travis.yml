language: generic

services:
  - docker

# build test/dev version to run tests
# use client/Dockerfile.dev to build with build context ./client
before_install:
  - docker build -t temp_container -f ./client/Dockerfile.dev ./client

# -- --coverage to make sure npm run test exits
script:
  - docker run -e CI=true temp_container npm run test -- --coverage

after_success:
  - docker build -t $DOCKER_ID/multi-client ./client
  - docker build -t $DOCKER_ID/multi-nginx ./nginx
  - docker build -t $DOCKER_ID/multi-server ./server
  - docker build -t $DOCKER_ID/multi-worker ./worker

  # Log in to Docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

  # Take those images and push to Docker Hub
  - docker push $DOCKER_ID/multi-client
  - docker push $DOCKER_ID/multi-nginx
  - docker push $DOCKER_ID/multi-server
  - docker push $DOCKER_ID/multi-worker

deploy:
  edge: true
  provider: elasticbeanstalk
  region: $AWS_REGION
  app: $AWS_APP_NAME
  env: $AWS_ENV_NAME
  bucket_name: $AWS_BUCKET_NAME
  bucket_path: $AWS_BUCKET_PATH
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
